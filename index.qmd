---
title: "Análisis de datos de felidos"
author: "Corina Solano"
format: html
theme: cosmo
---

## Carga de paquetes

```{r}
#| label: carga-paquetes
#| message: false
#| warning: false

library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(terra)
library(leaflet)
library(leaflet.extras)
library(leafem)
```

# Carga de datos

```{r}
#| label: carga-datos

provincias <-
  st_read("provincias.geojson")

felidos <-
  st_read(
    "felidos.csv",
    options = c(
      "X_POSSIBLE_NAMES=decimalLongitude",
      "Y_POSSIBLE_NAMES=decimalLatitude"
    )
  )
```

```{r}
#| label: asignat-crs

provincias <-
  provincias |>
  st_transform(4326)

  st_crs(felidos) <- 4326
```


# Análisis de datos

## Tabla

```{r}
#| label: tabla-felidos

felidos |>
  st_drop_geometry() |>
  mutate(aventDate = as.Date(eventDate)) |>
  select(species, eventDate, stateProvince, locality, decimalLongitude, decimalLatitude) |>
  datatable(
    colnames = c("Especie", "Fecha", "Provincia", "Localidad", "Longitud", "Latitud"),
    options = list (
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  )
```


# Gráfico

```{r}
#| label: grafico-registros-x-especie

grafico_ggplot2 <-
felidos |>
  ggplot(aes(x = species))+
  geom_bar() +
ggtitle("Cantidad de registros de felidos por especie") +
  xlab("Especie") +
  ylab("Cantidad de registros") +
  coord_flip()+
  theme_classic()

ggplotly(grafico_ggplot2) |> config(locale = "es")
```

Cantidad de registros de félidos por mes

```{r}
#| label: grafico-registros-x-mes

grafico_ggplot2 <-
felidos |>
  st_drop_geometry() |>
  ggplot(aes(x = month))+
  geom_bar() +
ggtitle("Cantidad de registros de félidos por mes") +
  xlab("Mes") +
  ylab("Cantidad de registros") +
  theme_minimal()

ggplotly(grafico_ggplot2) |> config(locale = "es")
```


# Mapa

```{r}
#| label: mapa-01

colores_altitud <-
  colorNumeric(terrain.colors(25), values(altitud), na.color = "transparent")

leaflet() |>
  setView(
    lng = -84.19452,
    lat = 9.572735,
    zoom = 7) |>
  addTiles(group = "Mapa general (OpenStreetMap)") |>
  addProviderTiles(providers$Esri.WorldImagery, group = "Imágenes satelitales (ESRI World Imagery)") |>
  addRasterImage(altitud,
                 colors = colores_altitud,
                 opacity = 0.6,
                 group = "altitud",
  ) |>
   addLegend(
    title = "Altitud",
    values = values(altitud),
    pal = colores_altitud,
    position = "bottomleft",
    group = "Altitud"
  ) |> 
  addPolygons(
    data = provincias,
    color = "black",
    fillColor = "transparent",
    stroke = TRUE,
    weight = 1.0,
    group = "Provincias"
  ) |>
  addCircleMarkers(
    data = felidos,
    stroke = F,
    radius = 4,
    fillColor = 'blue',
    fillOpacity = 1,
    popup = paste(
      paste0("<strong>Especie: </strong>", felidos$species),
      paste0("<strong>Localidad: </strong>", felidos$locality),
      paste0("<strong>Fecha: </strong>", felidos$eventDate),
      paste0("<strong>Fuente: </strong>", felidos$institutionCode),
      paste0("<a href='", felidos$occurrenceID, "'>Más información</a>"),
      sep = '<br/>'
    ),
    group = "Félidos"
  ) |>
  addLayersControl(
    baseGroups = c(
      "Mapa general (OpenStreetMap)",
      "Imágenes satelitales (ESRI World Imagery)"
    ),
    overlayGroups = c("Altitud", "Provincias", "Félidos")
  ) |> 
  addResetMapButton() |> 
  addSearchOSM() |> 
  addMouseCoordinates() |> 
  addScaleBar(position = "bottomleft", options = scaleBarOptions(imperial = FALSE)) |> 
  addMiniMap(position = "bottomright") |> 
  addFullscreenControl() 
```







